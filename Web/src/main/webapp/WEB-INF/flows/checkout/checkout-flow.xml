<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	  xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
	  parent="global">

    <!--todo unit test this-->

	<on-start>
		<!--abstractEditable properties-->
		<set name="flowScope.outState" value="'checkout'"/>
		<set name="flowScope.afterDeleteFlowName" value="'checkout'"/>
		<!--menu background-->
	</on-start>

	<view-state id="checkout" parent="global#newProductsAware" model="cart">
        <transition on="deleteFromCart">
            <evaluate expression="cart.deleteItem(cart.itemsDataModel.selectedRow)"/>
            <render fragments="checkout:quantityTable,checkout:cartItemsFragment,topPanelForm:shoppingCartFragment"/>
        </transition>
        
        <transition on="quantityChanged">
            <render fragments="checkout:cartItemsFragment,topPanelForm:shoppingCartFragment"/>
        </transition>

        <transition on="order" to="decideIfUserIsAuthenticated">
            <!--<secured attributes="ROLE_UNREGISTERED, ROLE_CLIENT, ROLE_CONSULTANT, ROLE_ADMIN" match="any"/>-->
        </transition>

        <transition on-exception="org.springframework.security.access.AccessDeniedException" to="error"/>
    </view-state>

	<action-state id="decideIfUserIsAuthenticated">
		<evaluate expression="securityService.isUserAuthenticated()"/>
		<transition on="yes" to="order"/>
		<transition on="no" to="quickRegistrationFirstTime">
			<evaluate expression="clientDao.newInstance()" result="flowScope.client"/>
			<!--todo why do we get null in de-serialized Client's name?-->
			<!--<evaluate expression="clientDao.newInstance()" result="conversationScope.client"/>-->
		</transition>
		<transition on="unregistered" to="changeQuickregDetails">
			<evaluate expression="clientDao.getByLogin(currentUser.name)" result="flowScope.client"/>
		</transition>
	</action-state>

	<view-state id="changeQuickregDetails" parent="global#newProductsAware" model="client">
		<transition on="change" to="quickRegistrationAdjustDetails"/>
		<transition on="itsOK" to="order"/>
	</view-state>

	<view-state id="quickRegistration" parent="global#newProductsAware" model="client">
		<transition on="quickreg" to="order"/>
		<transition on-exception="java.lang.IllegalAccessException" to="#{viewName}"/>
		<transition on-exception="java.lang.IllegalArgumentException" to="#{viewName}"/>
	</view-state>

	<view-state id="quickRegistrationFirstTime" parent="checkout#quickRegistration" view="../checkout/quickRegistration.xhtml">
		<on-entry>
			<set name="viewScope.viewName" value="'quickRegistrationFirstTime'"/>
		</on-entry>
		<transition on="quickreg" to="order">
			<set name="client.login" value="client.email"/>
			<evaluate expression="clientDao.saveOrFetchUnregisteredClientByEmail(flowRequestContext, client)" result="flowScope.client"/>
			<evaluate expression="securityService.authenticateUser(client)"/>
		</transition>
	</view-state>

	<view-state id="quickRegistrationAdjustDetails" parent="checkout#quickRegistration" view="../checkout/quickRegistration.xhtml" model="client">
		<on-entry>
			<set name="viewScope.viewName" value="'quickRegistrationAdjustDetails'"/>
		</on-entry>
		<transition on="quickreg" to="order">
			<set name="client.login" value="client.email"/>
			<evaluate expression="clientDao.mergeAnonymousClient(flowRequestContext, client)"/>
			<!--todo do we need it here?-->
			<evaluate expression="securityService.authenticateUser(client)"/>
		</transition>
	</view-state>

	<view-state id="order" parent="global#newProductsAware">
        <transition on="order" to="success">
            <evaluate expression="clientDao.buyGoods(cart, currentUser.name)"/>
            <evaluate expression="mailService.sendBuyingActNotification(cart, currentUser)"/>
            <evaluate expression="cart.emptyCart()"/>
		</transition>
		<!--
		  <on-exit>
			  <evaluate expression="securityService.tryToLogoutAnonymous(currentUser.name)"/>
		  </on-exit>
  -->
    </view-state>

    <view-state id="success" parent="global#newProductsAware">
        <transition on="done" to="done"/>
    </view-state>

    <view-state id="error" view="externalRedirect:contextRelative:/spring/login"/>
    <view-state id="done" view="flowRedirect:about"/>
</flow>