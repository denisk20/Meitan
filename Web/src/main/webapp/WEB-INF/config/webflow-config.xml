<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:webflow="http://www.springframework.org/schema/webflow-config"
	   xmlns:faces="http://www.springframework.org/schema/faces"
	   xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/webflow-config
           http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd
           http://www.springframework.org/schema/faces
           http://www.springframework.org/schema/faces/spring-faces-2.0.xsd">

	<!-- Executes flows: the central entry point into the Spring Web Flow system -->
	<webflow:flow-executor id="flowExecutor">
		<webflow:flow-execution-listeners>
			<webflow:listener ref="jpaFlowExecutionListener"/>
			<webflow:listener ref="securityFlowExecutionListener"/>
		</webflow:flow-execution-listeners>
		<webflow:flow-execution-attributes>
			<webflow:always-redirect-on-pause value="true"/>
		</webflow:flow-execution-attributes>
	</webflow:flow-executor>

	<!--
	 <bean id="flowController" class="org.springframework.webflow.mvc.servlet.FlowController">
		 <property name="flowExecutor" ref="flowExecutor"/>
		 <property name="ajaxHandler">
			 <bean class="org.springframework.faces.richfaces.RichFacesAjaxHandler"/>
		 </property>
	 </bean>
 -->

	<!-- The registry of executable flow definitions -->
	<webflow:flow-registry id="flowRegistry" flow-builder-services="facesFlowBuilderServices"
						   base-path="/WEB-INF/flows">
		<webflow:flow-location-pattern value="/**/*-flow.xml"/>
	</webflow:flow-registry>

	<!-- Configures the Spring Web Flow JSF integration -->
	<!--<faces:flow-builder-services id="facesFlowBuilderServices" development="true"/>-->
	<faces:flow-builder-services id="facesFlowBuilderServices" development="true"
								 conversion-service="myConversionService"/>

	<!-- Installs a listener that manages JPA persistence contexts for flows that require them -->
	<bean id="jpaFlowExecutionListener" class="org.springframework.webflow.persistence.JpaFlowExecutionListener">
		<constructor-arg ref="entityManagerFactory"/>
		<constructor-arg ref="transactionManager"/>
	</bean>

	<!-- Installs a listener to apply Spring Security authorities -->
	<bean id="securityFlowExecutionListener"
		  class="org.springframework.webflow.security.SecurityFlowExecutionListener"/>

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="-1"/>
	</bean>

	<bean id="uploadDirResource" class="org.springframework.core.io.FileSystemResource">
		<constructor-arg>
			<value>temp</value>
		</constructor-arg>
	</bean>

	<bean id="utils" class="com.meitan.lubov.services.util.Utils"/>

	<bean id="fileUploadHandler" class="com.meitan.lubov.services.util.FileUploadHandler">
		<property name="uploadPath" value="#{utils.imageUploadDirectoryPath}"/>
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${meitan.mail.host}"/>
		<property name="username" value="${meitan.mail.username}"/>
		<property name="password" value="${meitan.mail.password}"/>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">${meitan.mail.smtp.auth}</prop>
				<prop key="mail.debug">${meitan.mail.debug}</prop>
				<!--this is for ssl-->
				<!--
					<prop key="mail.smtp.socketFactory.port">${meitan.mail.socketfactory.port}</prop>
					<prop key="mail.smtp.socketFactory.class">${meitan.mail.socketfactory.class}</prop>
					<prop key="mail.smtp.socketFactory.fallback">${meitan.mail.socketfactory.fallback}</prop>
	-->
			</props>
		</property>
	</bean>

	<bean id="adminEmail" class="java.lang.String">
		<constructor-arg value="denis.k1985@gmail.com"/>
	</bean>

	<bean id="ccEmails" class="java.util.ArrayList">
		<constructor-arg>
			<list>
				<value>denis_k@nixsolutions.com</value>
				<value>denis.k1985@gmail.com</value>
			</list>
		</constructor-arg>
	</bean>

	<bean id="from" class="java.lang.String">
		<constructor-arg>
			<value>${meitan.mail.username}</value>
		</constructor-arg>
	</bean>

	<bean id="xmlResourdceBundleControl" class="com.meitan.lubov.services.util.XmlResourceBundleControl"/>

	<bean id="messageSource"
		  class="com.meitan.lubov.services.util.ControlledResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages.messages</value>
			</list>
		</property>
		<property name="control" ref="xmlResourdceBundleControl"/>
	</bean>

	<!--colors-->
	<bean id="blue" class="java.lang.String">
		<constructor-arg value="77c8fb"/>
	</bean>

	<bean id="orange" class="java.lang.String">
		<constructor-arg value="fde4a1"/>
	</bean>

	<bean id="yellow" class="java.lang.String">
		<constructor-arg value="fffeb6"/>
	</bean>

	<bean id="red" class="java.lang.String">
		<constructor-arg value="ffd4d4"/>
	</bean>

	<!--size literals-->
	<bean id="bigName" class="java.lang.String">
		<constructor-arg value="big"/>
	</bean>

	<bean id="smallName" class="java.lang.String">
		<constructor-arg value="small"/>
	</bean>

	<bean id="tinyName" class="java.lang.String">
		<constructor-arg value="tiny"/>
	</bean>

	<!--size values-->
	<bean id="bigWidth" class="java.lang.Integer">
		<constructor-arg value="25"/>
	</bean>

	<bean id="bigHeight" class="java.lang.Integer">
		<constructor-arg value="29"/>
	</bean>

	<bean id="smallWidth" class="java.lang.Integer">
		<constructor-arg value="17"/>
	</bean>

	<bean id="smallHeight" class="java.lang.Integer">
		<constructor-arg value="20"/>
	</bean>

	<bean id="tinyWidth" class="java.lang.Integer">
		<constructor-arg value="8"/>
	</bean>

	<bean id="tinyHeight" class="java.lang.Integer">
		<constructor-arg value="9"/>
	</bean>

	<!--Rounded borders items-->
	<bean id="blueBigRoundedItem" class="com.meitan.lubov.services.util.RoundedItemBean">
		<property name="color" ref="blue"/>
		<property name="size" ref="bigName"/>
		<property name="itemWidth" ref="bigWidth"/>
		<property name="itemHeight" ref="bigHeight"/>
	</bean>

	<bean id="orangeBigRoundedItem" class="com.meitan.lubov.services.util.RoundedItemBean">
		<property name="color" ref="orange"/>
		<property name="size" ref="bigName"/>
		<property name="itemWidth" ref="bigWidth"/>
		<property name="itemHeight" ref="bigHeight"/>
	</bean>

	<bean id="blueSmallRoundedItem" class="com.meitan.lubov.services.util.RoundedItemBean">
		<property name="color" ref="blue"/>
		<property name="size" ref="smallName"/>
		<property name="itemWidth" ref="smallWidth"/>
		<property name="itemHeight" ref="smallHeight"/>
	</bean>

	<bean id="blueTinyRoundedItem" class="com.meitan.lubov.services.util.RoundedItemBean">
		<property name="color" ref="blue"/>
		<property name="size" ref="tinyName"/>
		<property name="itemWidth" ref="tinyWidth"/>
		<property name="itemHeight" ref="tinyHeight"/>
	</bean>





	<!--Test section -->
	<bean id="numberBean" class="com.meitan.lubov.services.test.NumberBean">
		<property name="min" value="1"/>
		<property name="max" value="10"/>
	</bean>


</beans>